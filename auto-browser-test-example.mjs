import {createServer} from "http-server";
import {chromium} from "playwright";

import {createServers} from "./create-gateway-servers.js";

// start servers env
const gatewayConfig = {
  sig: {port: 9090,},
  gateway: {port: 9000,},
  idFile: "./.gateway-peer-id.bin",
};
const gatewayServers = await createServers(gatewayConfig);
const httpServer = createServer();
await new Promise(f => httpServer.server.listen(8000, f));

// browser
const browser = await chromium.launch();
const page = await browser.newPage();
//page.on("console", msg => console.log(msg.text()));

await page.goto("http://localhost:8000/browser/hello-http2p-gateway.html");
await page.waitForLoadState();
const r = await page.evaluate(() => new Promise(f => {
  //NOTE: access link url after generated by script with MutationObserver
  const observer = new MutationObserver((list, observer) => {
    for (const {type, addedNodes} of list) {
      if (type !== "childList") continue;
      for (const node of addedNodes) {
        if (node.tagName.toLowerCase() !== "a") continue;
        const url = node.href;
        fetch(url).then(res => res.text()).then(f);
        observer.disconnect();
      }
    }
  });
  observer.observe(document.body, {subtree: false, childList: true});
}));

console.log(r); // Hello World

// close
await browser.close();
await new Promise(f => httpServer.server.close(f));
await gatewayServers.stop();


